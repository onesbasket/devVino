# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-01 23:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('listSummary', '0023_auto_20160301_0017'),
    ]

    operations = [
        migrations.CreateModel(
            name='tagCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column=b'name', max_length=100, null=True)),
            ],
            options={
                'db_table': 'tagCountry',
            },
        ),
        migrations.CreateModel(
            name='tagGrape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column=b'name', max_length=100, null=True)),
            ],
            options={
                'db_table': 'tagGrame',
            },
        ),
        migrations.CreateModel(
            name='tagRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column=b'name', max_length=100, null=True)),
            ],
            options={
                'db_table': 'tagRegion',
            },
        ),
        migrations.CreateModel(
            name='vino_transferSummary_Mlvolume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mlVolume', models.CharField(db_column=b'mlVolume', max_length=100, null=True)),
            ],
            options={
                'db_table': 'vino_transferSummary_Mlvolume',
            },
        ),
        migrations.CreateModel(
            name='vino_transferSummary_TasteType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tasteType', models.CharField(db_column=b'tasteType', max_length=100, null=True)),
            ],
            options={
                'db_table': 'vino_transferSummary_TasteType',
            },
        ),
        migrations.RenameField(
            model_name='vino_transfersummary_year',
            old_name='vino_transfersummary',
            new_name='summaryId',
        ),
        migrations.RemoveField(
            model_name='vino_transfersummary',
            name='mlVolume',
        ),
        migrations.RemoveField(
            model_name='vino_transfersummary',
            name='tasteType',
        ),
        migrations.RemoveField(
            model_name='vino_transfersummary',
            name='testmany',
        ),
        migrations.RemoveField(
            model_name='vino_transfersummary',
            name='years',
        ),
        migrations.DeleteModel(
            name='testVinoGrape',
        ),
        migrations.AddField(
            model_name='vino_transfersummary_tastetype',
            name='summaryId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listSummary.vino_transferSummary'),
        ),
        migrations.AddField(
            model_name='vino_transfersummary_mlvolume',
            name='summaryId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listSummary.vino_transferSummary'),
        ),
        migrations.AddField(
            model_name='vino_transfersummary',
            name='tagCountry',
            field=models.ManyToManyField(to='listSummary.tagCountry'),
        ),
        migrations.AddField(
            model_name='vino_transfersummary',
            name='tagGrape',
            field=models.ManyToManyField(to='listSummary.tagGrape'),
        ),
        migrations.AddField(
            model_name='vino_transfersummary',
            name='tagRegion',
            field=models.ManyToManyField(to='listSummary.tagRegion'),
        ),
    ]
